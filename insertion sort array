def insertion_sort(arr):
function.
â€¢  Sort and print a reverse sorted array using the bubble sort function.


4.Write code for  Insertion Sort that  manages arrays with duplicate elements during the sorting process. Ensure the algorithm's behavior when encountering duplicate values, including whether it preserves the relative order of duplicates and how it affects the overall sorting outcome. 
Examples:
1. Array with Duplicates:
Input: [3, 1, 4, 1, 5, 9, 2, 6, 5, 3]
Output: [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]
All Identical Elements:
Input: [5, 5, 5, 5, 5]
Output: [5, 5, 5, 5, 5]
Mixed Duplicates:
Input: [2, 3, 1, 3, 2, 1, 1, 3]
Output: [1, 1, 1, 2, 2, 3, 3, 3]

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr
# Array with Duplicates
input_arr1 = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3]
output_arr1 = insertion_sort(input_arr1)
print(output_arr1)
# All Identical Elements
input_arr2 = [5, 5, 5, 5, 5]
output_arr2 = insertion_sort(input_arr2)
print(output_arr2)
# Mixed Duplicates
input_arr3 = [2, 3, 1, 3, 2, 1, 1, 3]
output_arr3 = insertion_sort(input_arr3)
print(output_arr3)
